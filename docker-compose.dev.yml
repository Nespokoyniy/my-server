services:
  test_db:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${TEST_DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${USER}
    networks:
      - backend
    volumes:
      - pg_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${USER} -d ${TEST_DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
  main_db:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${USER}
    networks:
      - backend
    volumes:
      - pg_main_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: /backend
      dockerfile: Dockerfile
    image: my-server-backend-dev:latest
    networks:
      - backend
    volumes:
      - ./backend:/backend
    environment:
      - DB_URL=${DB_URL}
      - SECRET_KEY=${SECRET_KEY}
      - REFRESH_SECRET_KEY=${REFRESH_SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - TOKEN_EXPIRE_MINUTES=${TOKEN_EXPIRE_MINUTES}
      - REFRESH_TOKEN_EXPIRE_MINUTES=${REFRESH_TOKEN_EXPIRE_MINUTES}
      - REFRESH_ALGORITHM=${REFRESH_ALGORITHM}
    command: >
      sh -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --reload-dir /backend/app"
    depends_on:
      main_db:
        condition: service_healthy
      test_db:
        condition: service_healthy
    ports:
      - "8000:8000"

  pgadmin4:
    image: dpage/pgadmin4:latest
    ports:
      - 5050:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - main_db
      - test_db
    volumes:
      - pgadmin4_data:/var/lib/pgadmin
    networks:
      - backend
  tests:
    build:
      context: .
      dockerfile: Dockerfile.tests
    image: my-server-tests-dev:latest
    networks:
      - backend
    environment:
      - DB_URL=${TEST_DB_URL}
      - SECRET_KEY=${SECRET_KEY}
      - REFRESH_SECRET_KEY=${REFRESH_SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - TOKEN_EXPIRE_MINUTES=${TOKEN_EXPIRE_MINUTES}
      - REFRESH_TOKEN_EXPIRE_MINUTES=${REFRESH_TOKEN_EXPIRE_MINUTES}
      - REFRESH_ALGORITHM=${REFRESH_ALGORITHM}
    command: sh -c "cd backend && alembic upgrade head && cd .. && pytest; tail -f /dev/null"
    tty: true
    stdin_open: true
    volumes:
      - ./tests:/test/tests
      - ./backend:/test/backend
    depends_on:
      test_db:
        condition: service_healthy
      backend:
        condition: service_started


volumes:
  pg_main_data:
  pgadmin4_data:
  pg_test_data:

networks:
  backend:
    driver: bridge